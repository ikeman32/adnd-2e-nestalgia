/* Boddy with Variables */
body {
	/* Collapse icons */
	--collapse-icon-color: var(--color-blue); /* Default Color */
	--collapse-icon-size: 20px; /* Default Size */

	/* UI font sizes */
	--font-ui-smaller: 13px; /* up from 12px */
	--font-ui-small: 14px; /* up from 13px */
	--font-ui-medium: 16px; /* up from 15px */

	/*Custom Header Colors*/
	--h1-color: var(--color-red);
	--h2-color: var(--color-blue);
	--h3-color: var(--color-green);
	--h4-color: var(--color-yellow);
	--h5-color: var(--color-pink);
	--h6-color: var(--color-orange);

	/* Custom Header Weights */
	--h1-weight: 800;
	--h2-weight: 700;
	--h3-weight: 600;
	--h4-weight: 500;
	--h5-weight: 500;
	--h6-weight: 500;

	/* Horizontal rules */
	--hr-color: var(--color-hr-color); /*Color of horizontal rule*/
	--hr-line-offset: 25%; /* New Variable */

	/* Italic */
	--italic-color: var(--color-yellow); /* Originally inherit */

	/* Markdown Links */
	--link-color: #96ded1; /*Robin Egg Blue*/
	--link-decoration: none; /* Remove Underline */
	--link-external-decoration: none; /* Remove Underline */
	/* Lists */
	--list-spacing: 0.09em; /* New Default */
	--list-bullet-size: 0.6em; /* New Default */
	
	/* Tables */
	--table-header-color: var(--color-green); /**/
	--table-text-color: var(--color-base-80); /**/
}
/* End Body */

/* Table Header Color */
/* Red */
body div[class*="thead-red"]{
	--table-header-color: var(--color-red);
}
/* Orange */
body div[class*="thead-orange"]{
	--table-header-color: var(--color-orange);
}
/* Yellow */
body div[class*="thead-yellow"]{
	--table-header-color: var(--color-yellow);
}
/* Green */
body div[class*="thead-none"]{
	--table-header-color: none;
}
/* Cyan */
body div[class*="thead-cyan"]{
	--table-header-color: var(--color-cyan);
}
/* Blue */
body div[class*="thead-blue"]{
	--table-header-color: var(--color-blue);
}
/* Purple */
body div[class*="thead-purple"]{
	--table-header-color: var(--color-purple);
}
/* Pink */
body div[class*="thead-pink"]{
	--table-header-color: var(--color-pink);
}

/* Red */
body div[class*="td-red"]{
	--table-text-color: var(--color-red);
}
/* Orange */
body div[class*="td-orange"]{
	--table-text-color: var(--color-orange);
}
/* Yellow */
body div[class*="td-yellow"]{
	--table-text-color: var(--color-yellow);
}
/* Green */
body div[class*="td-green"]{
	--table-text-color: var(--color-green);
}
/* Cyan */
body div[class*="td-cyan"]{
	--table-text-color: var(--color-cyan);
}
/* Blue */
body div[class*="td-blue"]{
	--table-text-color: var(--color-blue);
}
/* Purple */
body div[class*="td-purple"]{
	--table-text-color: var(--color-purple);
}
/* Pink */
body div[class*="td-pink"]{
	--table-text-color: var(--color-pink);
}

/* Link Decoration Underline*/
body div[class*="umderline-link"]{
	--link-decoration: underline;
	--link-external-decoration: underline;
}

/* Link Colors */
/* Red */
body div[class*="red-link"]{
	--link-color: var(--color-red);
}
/* Orange */
body div[class*="orange-link"]{
	--link-color: var(--color-orange);
}
/* Yellow */
body div[class*="yellow-link"]{
	--link-color: var(--color-yellow);
}
/* Green */
body div[class*="green-link"]{
	--link-color: var(--color-green);
}
/* Cyan */
body div[class*="cyan-link"]{
	--link-color: var(--color-cyan);
}
/* Blue */
body div[class*="blue-link"]{
	--link-color: var(--color-blue);
}
/* Purple */
body div[class*="purple-link"]{
	--link-color: var(--color-purple);
}
/* Pink */
body div[class*="pink-link"]{
	--link-color: var(--color-pink);
}

/* Hide Blockquote border */
body div[class*="hide-bq-bord"]{
	--blockquote-border-color: none;
}

/* Round Checkbox */
body div[class*="round-cb"] {
	--checkbox-radius: 50%;
	--checkbox-border-color: var(--color-);
}

/* Checkbox Color Checked */
/* Red */
body div[class*="red-cb"] {
	--checkbox-color: var(--color-red);
}
/* Orange */
body div[class*="orange-cb"] {
	--checkbox-color: var(--color-orange);
}
/* Yellow */
body div[class*="yellow-cb"] {
	--checkbox-color: var(--color-yellow);
}
/* Green */
body div[class*="green-cb"] {
	--checkbox-color: var(--color-green);
}
/* Cyan */
body div[class*="cyan-cb"] {
	--checkbox-color: var(--color-cyan);
}
/* Blue */
body div[class*="blue-cb"] {
	--checkbox-color: var(--color-blue);
}
/* Purple */
body div[class*="purple-cb"] {
	--checkbox-color: var(--color-purple);
}
/* Pink */
body div[class*="pink-cb"] {
	--checkbox-color: var(--color-pink);
}

/* Highlighted Text */
/* Red */
body div[class*="red-hl"] {
	--text-highlight-bg-rgb: 210, 4, 45;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}
/* Orange */
body div[class*="orange-hl"] {
	--text-highlight-bg-rgb: 236, 88, 0;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}
/* Yellow */
body div[class*="yellow-hl"] {
	---text-highlight-bg-rgb: 196, 180, 84;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}
/* Green */
body div[class*="green-hl"] {
	--text-highlight-bg-rgb: 0, 163, 108;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}
/* Cyan */
body div[class*="cyan-hl"] {
	--text-highlight-bg-rgb: 83, 223, 221;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}
/* Blue */
body div[class*="blue-hl"] {
	--text-highlight-bg-rgb: 96, 130, 182;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}
/* Purple */
body div[class*="purple-hl"] {
	--text-highlight-bg-rgb: 168, 130, 255;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}
/* Pink */
body div[class*="pink-hl"] {
	--text-highlight-bg-rgb: 222, 49, 99;
	--text-highlight-bg: rgba(var(--text-highlight-bg-rgb), 0.4);
}

/* Begin Dark Theme */
.theme-dark {
	color-scheme: dark;
	--color-hr-color: #77ca71; /*Unknown Name*/
	--color-red-rgb: 210, 4, 45; /*Cherry*/
	--color-red: #d2042d; /*Cherry*/
	--color-orange-rgb: 236, 88, 0; /*Persimmon*/
	--color-orange: #ec5800; /*Persimmon*/
	--color-yellow-rgb: 196, 180, 84; /*Vegas Gold*/
	--color-yellow: #c4b454; /*Vegas Gold*/
	--color-green-rgb: 	0, 163, 108; /*Jade*/
	--color-green: #00a36c; /*Jade*/
	--color-blue-rgb: 96, 130, 182; /*Glaucous*/
	--color-blue: #00b0f0; /*Deep Sky Blue*/
	--color-pink-rgb: 222, 49, 99; /*Cerise*/
	--color-pink: #de3163; /*Cerise*/
}
/* End Dark Theme */

/* Custom Header Section */
/*Center All Headers Trigger*/
body div[class*="center-header"] {
	--h1-align: center;
	--h2-align: center;
	--h3-align: center;
	--h4-align: center;
	--h5-align: center;
	--h6-align: center;
}
/*Center Individual Headers Trigger*/
/* Works in preview and rendered mode */
body div[class*="center-h1"] {
	--h1-align: center;
}
body div[class*="center-h2"] {
	--h2-align: center;
}
body div[class*="center-h3"] {
	--h3-align: center;
}
body div[class*="center-h4"] {
	--h4-align: center;
}
body div[class*="center-h5"] {
	--h5-align: center;
}
body div[class*="center-h6"] {
	--h6-align: center;
}
/* End Centering of Headers */

/* Header Colors */
/* Works in preview and rendered mode */
/* Red Header Triggers */
body div[class*="none-h1"] {
	--h1-color: none;
}
body div[class*="red-h2"] {
	--h2-color: var(--color-red);
}
body div[class*="red-h3"] {
	--h3-color: var(--color-red);
}
body div[class*="red-h4"] {
	--h4-color: var(--color-red);
}
body div[class*="red-h5"] {
	--h5-color: var(--color-red);
}
body div[class*="red-h6"] {
	--h6-color: var(--color-red);
}
/* Orange Header Triggers */
body div[class*="orange-h1"] {
	--h1-color: var(--color-orange);
}
body div[class*="orange-h2"] {
	--h2-color: var(--color-orange);
}
body div[class*="orange-h3"] {
	--h3-color: var(--color-orange);
}
body div[class*="orange-h4"] {
	--h4-color: var(--color-orange);
}
body div[class*="orange-h5"] {
	--h5-color: var(--color-orange);
}
body div[class*="none-h6"] {
	--h6-color: none;
}

/* Yellow Header Triggers */
body div[class*="yellow-h1"] {
	--h1-color: var(--color-yellow);
}
body div[class*="yellow-h2"] {
	--h2-color: var(--color-yellow);
}
body div[class*="yellow-h3"] {
	--h3-color: var(--color-yellow);
}
body div[class*="none-h4"] {
	--h4-color: none;
}
body div[class*="yellow-h5"] {
	--h5-color: var(--color-yellow);
}
body div[class*="yellow-h6"] {
	--h6-color: var(--color-yellow);
}
/* Green Header Triggers */
body div[class*="green-h1"] {
	--h1-color: var(--color-green);
}
body div[class*="green-h2"] {
	--h2-color: var(--color-green);
}
body div[class*="none-h3"] {
	--h3-color: none;
}
body div[class*="green-h4"] {
	--h4-color: var(--color-green);
}
body div[class*="green-h5"] {
	--h5-color: var(--color-green);
}
body div[class*="green-h6"] {
	--h6-color: var(--color-green);
}
/* Cyan Header Triggers */
body div[class*="cyan-h1"] {
	--h1-color: var(--color-cyan);
}
body div[class*="cyan-h2"] {
	--h2-color: var(--color-cyan);
}
body div[class*="cyan-h3"] {
	--h3-color: var(--color-cyan);
}
body div[class*="cyan-h4"] {
	--h4-color: var(--color-cyan);
}
body div[class*="cyan-h5"] {
	--h5-color: var(--color-cyan);
}
body div[class*="cyan-h6"] {
	--h6-color: var(--color-cyan);
}
/* Blue Header Triggers */
body div[class*="blue-h1"] {
	--h1-color: var(--color-blue);
}
body div[class*="none-h2"] {
	--h2-color: none;
}
body div[class*="blue-h3"] {
	--h3-color: var(--color-blue);
}
body div[class*="blue-h4"] {
	--h4-color: var(--color-blue);
}
body div[class*="blue-h5"] {
	--h5-color: var(--color-blue);
}
body div[class*="blue-h6"] {
	--h6-color: var(--color-blue);
}
/* Purple Header Triggers */
body div[class*="purple-h1"] {
	--h1-color: var(--color-purple);
}
body div[class*="purple-h2"] {
	--h2-color: var(--color-purple);
}
body div[class*="purple-h3"] {
	--h3-color: var(--color-purple);
}
body div[class*="purple-h4"] {
	--h4-color: var(--color-purple);
}
body div[class*="purple-h5"] {
	--h5-color: var(--color-purple);
}
body div[class*="purple-h6"] {
	--h6-color: var(--color-purple);
}
/* Pink Header Triggers */
body div[class*="pink-h1"] {
	--h1-color: var(--color-pink);
}
body div[class*="pink-h2"] {
	--h2-color: var(--color-pink);
}
body div[class*="pink-h3"] {
	--h3-color: var(--color-pink);
}
body div[class*="pink-h4"] {
	--h4-color: var(--color-pink);
}
body div[class*="none-h5"] {
	--h5-color: none;
}
body div[class*="pink-h6"] {
	--h6-color: var(--color-pink);
}
/* End Header Colors */
/* End Custom Header Section */


/* Horizontal Rule Begin */

/*Customized Default Horizontal Rule Color*/
hr,
.markdown-rendered hr,
.markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--hr-color) calc(50% - var(--hr-line-offset)),
		var(--hr-color) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Red */
hr,
div[class*="hr-red"].markdown-rendered hr,
div[class*="hr-red"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-red) calc(50% - var(--hr-line-offset)),
		var(--color-red) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Orange */
hr,
div[class*="hr-orange"].markdown-rendered hr,
div[class*="hr-orange"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-orange) calc(50% - var(--hr-line-offset)),
		var(--color-orange) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Yellow */
hr,
div[class*="hr-yellow"].markdown-rendered hr,
div[class*="hr-yellow"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-yellow) calc(50% - var(--hr-line-offset)),
		var(--color-yellow) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Green */
hr,
div[class*="hr-green"].markdown-rendered hr,
div[class*="hr-green"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-green) calc(50% - var(--hr-line-offset)),
		var(--color-green) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Cyan */
hr,
div[class*="hr-cyan"].markdown-rendered hr,
div[class*="hr-cyan"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-cyan) calc(50% - var(--hr-line-offset)),
		var(--color-cyan) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Blue */
hr,
div[class*="hr-blue"].markdown-rendered hr,
div[class*="hr-blue"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-blue) calc(50% - var(--hr-line-offset)),
		var(--color-blue) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Purple */
hr,
div[class*="hr-purple"].markdown-rendered hr,
div[class*="hr-purple"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-purple) calc(50% - var(--hr-line-offset)),
		var(--color-purple) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* Horizontal Rule Pink */
hr,
div[class*="hr-pink"].markdown-rendered hr,
div[class*="hr-pink"].markdown-source-view.mod-cm6 hr {
	border-image-slice: 1;
	border-image-source: linear-gradient(
		to right,
		transparent,
		var(--color-pink) calc(50% - var(--hr-line-offset)),
		var(--color-pink) calc(50% + var(--hr-line-offset)),
		transparent
	);
}
/* End Customized Horizontal Rule */


/* Bold Colors */
/* Red */
body div[class*="bold-red"] {
	--bold-color: var(--color-red);
}
/* Orange */
body div[class*="bold-orange"] {
	--bold-color: var(--color-orange);
}
/* Yellow */
body div[class*="bold-yellow"] {
	--bold-color: var(--color-yellow);
}
/* Green */
body div[class*="bold-green"] {
	--bold-color: var(--color-green);
}
/* Cyan */
body div[class*="bold-cyan"] {
	--bold-color: var(--color-cyan);
}
/* Blue */
body div[class*="bold-blue"] {
	--bold-color: var(--color-blue);
}
/* Purple */
body div[class*="bold-purple"] {
	--bold-color: var(--color-purple);
}
/* Pink */
body div[class*="bold-pink"] {
	--bold-color: var(--color-pink);
}
/* End Bold Colors */


/* Italic colors */
/* Red */
body div[class*="italic-red"] {
	--italic-color: var(--color-red);
}
/* Orange */
body div[class*="italic-orange"] {
	--italic-color: var(--color-orange);
}
/* Yellow */
body div[class*="italic-none"] {
	--italic-color: none;
}
/* Green */
body div[class*="italic-green"] {
	--italic-color: var(--color-green);
}
/* Cyan */
body div[class*="italic-cyan"] {
	--italic-color: var(--color-cyan);
}
/* Blue */
body div[class*="italic-blue"] {
	--italic-color: var(--color-blue);
}
/* Purple */
body div[class*="italic-purple"] {
	--italic-color: var(--color-purple);
}
/* Pink */
body div[class*="italic-Pink"] {
	--italic-color: var(--color-pink);
}
/* End Italics Colors */

/* Collapse Icon Size */
.collapse-icon svg.svg-icon  {
    width: var(--collapse-icon-size);
	height: var(--collapse-icon-size);
}

/* Larger Popover */
.popover.hover-popover {
	max-height: 500px;    /* was 300 */
	min-height: 100px;
	width: 500px;     /* was 400 */
}


/* DO NOT DELETE BELOW THIS LINE */
/* === Wide Page === */
/* Snippet: MCL Wide Views / Author: Faiz Khuzaimah / twitter: @faizkhuzaimah / github: https://github.com/efemkay
	Version 0.9.4 (updated 2023-07-05) 
  */

/* --- Editing View ---
		- set Readable Line Length (RLL) to wide (100%) for any css class with "wide" word in it.
		- "width:100%" added for Blue Topaz
		- .cm-content added to override Mado 11
		- focus to fix for v0.16.x -- .markdown-source-view.mod-cm6 .cm-sizer
	*/

/* - WPEV - */
/* Main code */
/* Set the containers (all relevant levels) to max-width 100%. Applicable to global and per note (cssClass) */
/* selector for editing container .cm-sizer */
:is(body[class*="wide-"], div[class*="wide-"].markdown-source-view.mod-cm6.is-readable-line-width) .cm-sizer,
	/* selector for sub containers
		- .cm-contentContainer, .cm-contentContainer > .cm-content, .cm-contentContainer > .cm-content > div
		- .embedded-backlinks, .embedded-backlinks > div */
	:is(body[class*="wide-"]:not(.max-view-enabled), div[class*="wide-"].markdown-source-view.mod-cm6) :is(.cm-contentContainer.cm-contentContainer, .cm-contentContainer.cm-contentContainer > .cm-content, .cm-contentContainer.cm-contentContainer > .cm-content > div, .embedded-backlinks, .embedded-backlinks > div) {
	max-width: 99%;
	width: auto;
}

/* Special adjustment - for Minimal
		- it has table also set with max-width. but table require separate line because we don't want width: 100% as that would stretch the table
		- but for callout, require width: auto */
div[class*="wide-"].markdown-source-view.mod-cm6
	.cm-contentContainer.cm-contentContainer
	> .cm-content
	table {
	max-width: 100%;
}
div[class*="wide-"].markdown-source-view.mod-cm6.is-readable-line-width
	.cm-embed-block:is(.cm-callout, .admonition-parent)
	> .callout {
	max-width: 100%;
	width: auto;
}
/* overriding margin-left setting to obsidian "default" */
div[class*="wide-page"].markdown-source-view.mod-cm6 .embedded-backlinks,
div[class*="wide-page"].markdown-source-view.mod-cm6
	.cm-contentContainer
	> .cm-content
	> div {
	margin-left: 20px !important;
}
div[class*="wide-"].markdown-source-view.mod-cm6.is-readable-line-width
	.cm-embed-block:is(.cm-callout, .admonition-parent)
	> .callout {
	margin-left: 0 !important;
}

div[class*="wide-page"].markdown-source-view.mod-cm6.is-readable-line-width
	table {
	margin-left: unset !important;
}

/* Additional Note
		- Yin Yang uses .markdown-source-view.mod-cm6 { width: !important;}. I'm skipping fixes for this until there's user request
		- added :is(body:not(.max-view-enabled) .mod-root) to accomodate for Shimmering Focus, does not affect other themes */

/* --- Reading View --- */
/* -- similar to Editing View (WPEV), set the RLL to 100% for any css class with "wide" word in it
		- :is() used for OR between global toggle and "cssClass" in yaml
		- "width:100%" added for Blue Topaz */

/* - WPRV - */
/* Main code */
/* Set the containers (all relevant levels) to max-width 100%. Applicable to global and per note (cssClass) */
body[class*="wide-"]
	:is(
		.markdown-preview-sizer.markdown-preview-sizer,
		.markdown-preview-sizer.markdown-preview-sizer > div
	),
div[class*="wide-"].markdown-preview-view
	:is(
		.markdown-preview-sizer.markdown-preview-sizer,
		.markdown-preview-sizer.markdown-preview-sizer > div
	) {
	max-width: 100%;
	margin-inline: auto;
	width: 100%;
}

/* Special adjustment - for Minimal theme */
div[class*="wide-"].markdown-preview-view {
	padding-inline: 30px;
}

body {
	--callout-min-width: 200px;
	--callout-nowrap-min-width: 250px;
	--callout-gap: 0.5rem;
	--callout-margin: 5px;
	/* for list column, grid and card */
	--list-min-width: 200px;
	--col-rule-color: var(--background-modifier-border); /* #b3b3b3; */
	--col-rule-width: 1px;
	--list-grid-min-width: 250px;
	--list-grid-wide-min-width: 350px;
	--mcl-card-header-border-width: 1px;
	--mcl-card-bg-color: var(--background-secondary);
	--mcl-card-gap: 0.2em;
	--mcl-card-border-width: 1px;
	--mcl-card-border-color: var(--background-modifier-border);
}

/* === General === */

/* -- Fixed Width definition -- */
/* quadruple the last .callout to win specificity with main multi-column callout */
div[data-callout-metadata*="fw"].callout.callout.callout {
	flex-grow: 0;
	flex-shrink: 0;
}
div[data-callout-metadata*="fw1"].callout.callout.callout.callout {
	flex-basis: 100px;
	width: 100px;
}
div[data-callout-metadata*="fw2"].callout.callout.callout.callout {
	flex-basis: 200px;
	width: 200px;
}
div[data-callout-metadata*="fw3"].callout.callout.callout.callout {
	flex-basis: 300px;
	width: 300px;
}
div[data-callout-metadata*="fw4"].callout.callout.callout.callout {
	flex-basis: 400px;
	width: 400px;
}
div[data-callout-metadata*="fw5"].callout.callout.callout.callout {
	flex-basis: 500px;
	width: 500px;
}
div[data-callout-metadata*="fw6"].callout.callout.callout.callout {
	flex-basis: 600px;
	width: 600px;
}
div[data-callout-metadata*="fw7"].callout.callout.callout.callout {
	flex-basis: 700px;
	width: 700px;
}
div[data-callout-metadata*="fw8"].callout.callout.callout.callout {
	flex-basis: 800px;
	width: 800px;
}
div[data-callout-metadata*="fw9"].callout.callout.callout.callout {
	flex-basis: 900px;
	width: 900px;
}

div[data-callout-metadata*="pw1"].callout.callout.callout.callout {
	flex-basis: 10%;
	width: 10%;
}
div[data-callout-metadata*="pw2"].callout.callout.callout.callout {
	flex-basis: 20%;
	width: 20%;
}
div[data-callout-metadata*="pw3"].callout.callout.callout.callout {
	flex-basis: 30%;
	width: 30%;
}
div[data-callout-metadata*="pw4"].callout.callout.callout.callout {
	flex-basis: 40%;
	width: 40%;
}
div[data-callout-metadata*="pw5"].callout.callout.callout.callout {
	flex-basis: 50%;
	width: 50%;
}
div[data-callout-metadata*="pw6"].callout.callout.callout.callout {
	flex-basis: 60%;
	width: 60%;
}
div[data-callout-metadata*="pw7"].callout.callout.callout.callout {
	flex-basis: 70%;
	width: 70%;
}
div[data-callout-metadata*="pw8"].callout.callout.callout.callout {
	flex-basis: 80%;
	width: 80%;
}
div[data-callout-metadata*="pw9"].callout.callout.callout.callout {
	flex-basis: 90%;
	width: 90%;
}

/* metadata "wide-x" to control subcallout flexible max width. only discrete 2,4,8,16 */
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="mw0"].callout.callout {
	flex-basis: 0;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw1"].callout {
	flex: 1 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw2"].callout {
	flex: 2 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw3"].callout {
	flex: 3 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw4"].callout {
	flex: 4 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw5"].callout {
	flex: 5 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw6"].callout {
	flex: 6 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw7"].callout {
	flex: 7 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw8"].callout {
	flex: 8 0 auto;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="dw9"].callout {
	flex: 9 0 auto;
}

/* === Multi Column "DIV"'s Using Callout === */
/* Author: Faiz Khuzaimah / twitter: @faizkhuzaimah / github: https://github.com/efemkay */
/* 	some issues still persists
	(2) some theme uses transparency to affect .callout-title */

/* -- Main multi-column snippet using Callout */
/* variables */
body {
	--mcc-img-snw-display: none;
}

/* remove callout-title and make callout-content as part of main callout for box formatting */
div[data-callout="multi-column"].callout > .callout-title {
	display: none;
}
div[data-callout="multi-column"].callout > .callout-content {
	display: contents;
}
/* make the main callout a flex and remove box formatting */
/* --columns: unset to undo Sanctum's mod */
div[data-callout="multi-column"].callout {
	display: flex;
	flex-wrap: wrap;
	gap: var(--callout-gap);
	background: unset;
	border: unset;
	margin: unset;
	padding: unset;
	clear: both;
	--columns: unset;
}
/* make the subcallout in flex column to allow growing vertically */
div[data-callout="multi-column"].callout .callout {
	display: flex;
	flex-direction: column;
}
div[data-callout="multi-column"].callout:not(.is-collapsed) .callout {
	margin-inline: var(--callout-margin);
	margin-block: var(--callout-margin);
} /* to allow spacing for box shadow */
div[data-callout="multi-column"].callout .callout .callout-content {
	flex-grow: 1;
}

div[data-callout="multi-column"].callout
	> .callout-content
	> *:is(div, ul, blockquote) {
	flex: 1 1 var(--callout-min-width);
	margin: 0;
}

/* metadata "wide-x" to control subcallout flexible max width. only discrete 2,4,8,16 */
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="min-0"] {
	flex-basis: 0;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="wide-2"] {
	flex-grow: 2;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="wide-3"] {
	flex-grow: 3;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="wide-4"] {
	flex-grow: 4;
}
div[data-callout="multi-column"].callout
	> .callout-content
	> div[data-callout-metadata*="wide-5"] {
	flex-grow: 5;
}

@media (min-width: 500px) {
	/* .is-collapsed is used to draw the border-left only when it's collapsed */
	/* adjusted for Obsidian 0.16.x, removed a number of previous adjustment as no longer required */
	div[data-callout="multi-column"].callout
		> div.callout-content
		.callout.is-collapsed {
		box-shadow: unset;
		height: min-content;
	}
}

/* -- MCC Variation - Icons -- */

/* Main code */
div[data-callout="multi-column"][data-callout-metadata*="icons"].callout {
	justify-content: center;
}
div[data-callout="multi-column"][data-callout-metadata*="icons"].callout
	.callout {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}
div[data-callout="multi-column"][data-callout-metadata*="icons"].callout.callout
	.callout-content
	> p {
	flex-grow: 1;
	text-align: center;
}
/* Options for number of columns */
div[data-callout="multi-column"][data-callout-metadata*="icons"][data-callout-metadata*="col2"].callout.callout
	.callout-content
	> p {
	flex-basis: 40%;
}
div[data-callout="multi-column"][data-callout-metadata*="icons"][data-callout-metadata*="col3"].callout.callout
	.callout-content
	> p {
	flex-basis: 30%;
}
div[data-callout="multi-column"][data-callout-metadata*="icons"][data-callout-metadata*="col4"].callout.callout
	.callout-content
	> p {
	flex-basis: 22%;
}
div[data-callout="multi-column"][data-callout-metadata*="icons"][data-callout-metadata*="col5"].callout.callout
	.callout-content
	> p {
	flex-basis: 18%;
}

/* listive theme */
div[data-callout="multi-column"][data-callout-metadata*="icons"].callout
	p:first-child {
	margin-top: revert;
}

/* -- MCC Variation - Fixed Width Option -- */
/* Fixed Width Option (using callout-metadata) */
div[data-callout="multi-column"][data-callout-metadata*="center-fixed"].callout {
	justify-content: center;
}
div[data-callout="multi-column"][data-callout-metadata*="left-fixed"].callout {
	justify-content: flex-start;
}
div[data-callout="multi-column"][data-callout-metadata*="right-fixed"].callout {
	justify-content: flex-end;
}
div[data-callout="multi-column"][data-callout-metadata*="fixed"].callout
	> .callout-content
	> *:is(div, ul) {
	flex-grow: 0;
}

/* Callout size for Fixed Width Option */
div[data-callout="multi-column"][data-callout-metadata*="fixed"][data-callout-metadata*="small"].callout
	> .callout-content
	> *:is(div, ul) {
	flex-basis: calc(var(--float-small-width) * 0.5);
}
div[data-callout="multi-column"][data-callout-metadata*="fixed"][data-callout-metadata*="medium"].callout
	> .callout-content
	> *:is(div, ul) {
	flex-basis: calc(var(--float-medium-width) * 0.65);
}
div[data-callout="multi-column"][data-callout-metadata*="fixed"][data-callout-metadata*="large"].callout
	> .callout-content
	> *:is(div, ul) {
	flex-basis: calc(var(--float-large-width) * 0.8);
}

/* -- MCC Variation - No Wrap Option -- */

/* No-Wrap Option (using callout-metadata) - for single row with horizontal scrollbar */
div[data-callout="multi-column"][data-callout-metadata*="no-wrap"].callout {
	flex-wrap: nowrap;
	overflow-x: scroll;
}
div[data-callout="multi-column"][data-callout-metadata*="no-wrap"].callout
	> .callout-content
	> *:is(div, ul) {
	flex-shrink: 0;
	flex-basis: var(--callout-nowrap-min-width);
}
/* No-Wrap Option, Width Options */
.callout[data-callout="multi-column"][data-callout-metadata*="no-wrap"]
	.callout[data-callout-metadata*="small"] {
	flex-basis: 300px;
}
.callout[data-callout="multi-column"][data-callout-metadata*="no-wrap"]
	.callout[data-callout-metadata*="medium"] {
	flex-basis: 400px;
}
.callout[data-callout="multi-column"][data-callout-metadata*="no-wrap"]
	.callout[data-callout-metadata*="large"] {
	flex-basis: 600px;
}

/* Align center for items in callout */
div[data-callout="multi-column"] .callout[data-callout-metadata*="center"] {
	text-align: center;
}

/* == Special Adjustment for Community Themes */

/* Special Adjustment -- for theme with negative margin & box shadow. (e.g. Prism) */
div[data-callout="multi-column"].callout > .callout-content {
	margin-top: unset;
}
div[data-callout="multi-column"].callout:not(.is-collapsed) {
	box-shadow: unset;
}

/* Blue Topaz. remove box shadow from main [!multi-column] */
body[class*="notebook-liked-markdown-page"].shade-callout-style
	.callout[data-callout="multi-column"] {
	box-shadow: unset !important;
}

/* Special Adjustment -- for Sanctum because it has "column" callout, Obsidian v0.16.x. Not required for multi-flex as it Sanctum expects the name ends with *=column */
.callout[data-callout*="column"] .callout-title {
	display: flex;
}
.callout[data-callout*="column"] .callout-content {
	display: unset;
}

/* Special Adjustment -- for minimal left margin */ /*
		.markdown-source-view.mod-cm6.is-readable-line-width .cm-embed-block.cm-callout > div[data-callout="multi-column"].callout
			{ width: 100%; max-width: 100%; margin-inline: 0 !important; }
		/* Special Adjustment -- for Minimal .dataview.list-view-ul width - Minimal set the width with --line-width-adaptive (40rem by default) */
body:not(.table-100):not(.table-max):not(.table-wide)
	.markdown-preview-view.is-readable-line-width:not(.table-100):not(
		.table-max
	):not(.table-wide)
	div[data-callout="multi-column"].callout
	.dataview.list-view-ul {
	width: auto;
}

/* for Minimal -- Callout Outline */
.callouts-outlined
	div[data-callout="multi-column"].callout:not(.is-collapsed)
	.callout {
	margin-top: 18px;
}

/* == Special Adjustment for Plugins / Markdown Elements */

/* Special Adjustment for SNW plugin */
div[data-callout*="multi-column"].callout
	.callout-content
	span.image-embed
	+ .snw-reference {
	display: var(--mcc-img-snw-display);
}

/* DO NOT DELETE ABOVE THIS LINE */
